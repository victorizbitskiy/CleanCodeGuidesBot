{
  "source": "https://github.com/thangchung/clean-code-dotnet",
  "content": [
    {
      "item": "naming",
      "children": [
        { "item": "avoid-using-bad-names" },
        { "item": "avoid-misleading-names" },
        { "item": "avoid-hungarian-notation" },
        { "item": "use-consistent-capitalization" },
        { "item": "use-pronounceable-names" },
        { "item": "use-camelcase-notation" },
        { "item": "use-domain-name"}
      ]
    },
    {
      "item": "variables",
      "children": [
        { "item": "avoid-nesting-too-deeply-and-return-early" },
        { "item": "avoid-mental-mapping" },
        { "item": "avoid-magic-string" },
        { "item": "dont-add-unneeded-context" },
        { "item": "use-meaningful-and-pronounceable-variable-names" },
        { "item": "use-the-same-vocabulary-for-the-same-type-of-variable" },
        { "item": "use-searchable-names-part-1" },
        { "item": "use-searchable-names-part-2" },
        { "item": "use-explanatory-variables" },
        { "item": "use-default-arguments-instead-of-short-circuiting-or-conditionals" }
      ]
    },
    {
      "item": "functions",
      "children": [
        { "item": "avoid-side-effects" },
        { "item": "avoid-negative-conditionals" },
        { "item": "avoid-conditionals" },
        { "item": "avoid-type-checking-part-1" },
        { "item": "avoid-type-checking-part-2" },
        { "item": "avoid-flags-in-method-parameters" },
        { "item": "dont-write-to-global-functions" },
        { "item": "dont-use-a-singleton-pattern" },
        { "item": "function-arguments-2-or-fewer-ideally" },
        { "item": "functions-should-do-one-thing" },
        { "item": "function-names-should-say-what-they-do" },
        { "item": "functions-should-only-be-one-level-of-abstraction" },
        { "item": "function-callers-and-callees-should-be-close" },
        { "item": "encapsulate-conditionals" },
        { "item": "remove-dead-code" }
      ]
    },
    {
      "item": "objects-and-data-structures",
      "children": [
        { "item": "use-getters-and-setters" },
        { "item": "make-objects-have-privateprotected-members" }
      ]
    },
    {
      "item": "classes",
      "children": [
        { "item": "use-method-chaining" },
        { "item": "prefer-composition-over-inheritance" }
      ]
    },
    {
      "item": "solid",
      "children": [
        { "item": "what-is-solid" },
        { "item": "single-responsibility-principle-srp" },
        { "item": "openclosed-principle-ocp" },
        { "item": "liskov-substitution-principle-lsp" },
        { "item": "interface-segregation-principle-isp" },
        { "item": "dependency-inversion-principle-dip" },
        { "item": "dont-repeat-yourself-dry" }
      ]
    },
    {
      "item": "testing",
      "children": [
        { "item": "single-concept-per-test" },
        { "item": "basic-concept-of-testing" }
      ]
    },
    {
      "item": "concurrency",
      "children": [
        { "item": "use-asyncawait" }
      ]
    },
    {
      "item": "error-handling",
      "children": [
        { "item": "basic-concept-of-error-handling" },
        { "item": "dont-use-throw-ex-in-catch-block" },
        { "item": "dont-ignore-caught-errors" },
        { "item": "use-multiple-catch-block-instead-of-if-conditions" },
        { "item": "keep-exception-stack-trace-when-rethrowing-exceptions" }
      ]
    },
    {
      "item": "formatting",
      "children": [
        { "item": "uses-editorconfig-file" }
      ]
    },
    {
      "item": "comments",
      "children": [
        { "item": "avoid-positional-markers" },
        { "item": "dont-leave-commented-out-code-in-your-codebase" },
        { "item": "dont-have-journal-comments" },
        { "item": "only-comment-things-that-have-business-logic-complexity" }
      ]
    }
  ]
}
